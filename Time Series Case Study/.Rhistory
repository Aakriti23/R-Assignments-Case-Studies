tsdata <- read.table(choose.files(), header=TRUE, sep=",")
tsdata <- read.table(choose.files(), header=TRUE, sep=",")
tsdata <- read.table(choose.files(), header=TRUE)
tsdata <- read.table(choose.files(), header=TRUE)
View(tsdata)
View(tsdata)
getwd()
setwd("F:/Business Analytics/Case studies/Final Case Study-2")
tsdata<-read.xlsx("UK Outward Passengers Movement")
tsdata<-read.xls("UK Outward Passengers Movement")
tsdata<-read.table("UK Outward Passengers Movement")
getwd()
tsdata<-read.table("UK Outward Passengers Movement")
install.packages("readxl")
install.packages("readxl")
require("readxl")
tsdata<-read_xls("UK Outward Passengers Movement")
getwd()
setwd("F:/Business Analytics/Case studies/Final Case Study-2")
setwd("F:/Business Analytics/Case studies/Final Case Study-2")
getwd()
tsdata<-read_xls("UK Outward Passengers Movement.xls")
require("readxl")
tsdata<-read_xls("UK Outward Passengers Movement.xls")
View(tsdata)
# save a numeric vector containing 48 monthly observations
# from Jan 2009 to Dec 2014 as a time series object
tsdata <- read.table(choose.files(), header=TRUE, sep=",")
# save a numeric vector containing 48 monthly observations
# from Jan 2009 to Dec 2014 as a time series object
ts1data <- read.table(choose.files(), header=TRUE, sep=",")
View(tsdata)
tsdata<-read_xls("UK Outward Passengers Movement.xls")
tsdata<-read_xls("UK Outward Passengers Movement.xls")
View(tsdata)
# save a numeric vector containing 48 monthly observations
# from Jan 2009 to Dec 2014 as a time series object
ts1data <- read.table(choose.files(), header=TRUE, sep=",")
View(tsdata)
myts   <- ts(tsdata$Sales, start=c(1996, 1), end=c(2005, 4), frequency=4)
myts   <- ts(tsdata$Total, start=c(2008, 1), end=c(2011, 4), frequency=4)
myts   <- ts(tsdata$Total, start=c(1996, 1), end=c(2005, 4), frequency=4)
plot(myts)
plot(decompose(myts, type = c("multiplicative")))
?decompose()
fit <- stl(myts, s.window="period")
View(fit)
plot(fit)
ls(fit)
print(fit$time.series)
fit$win
forecast(fit, 4)
install.packages("forecast")
require("forecast")
forecast(fit, 4)
fit1 <- HoltWinters(myts, beta=FALSE, gamma=TRUE)
ls(fit1)
accuracy(fit1$fitted, myts)
accuracy(fit)
accuracy(fit1)
fit <- stl(myts, s.window="period")
accuracy(fit)
fit<-ets(myts)
accuracy(fit$fitted, myts)
summary(fit)
forecast(fit, 4)
plot(forecast(fit, 4))
accuracy(fit1$fitted, myts)
accuracy(fit$fitted, myts)
plot(forecast(fit, 4))
forecast(fit, 4)
